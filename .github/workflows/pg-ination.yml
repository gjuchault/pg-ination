name: pg-ination

on: [push]

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  dependencies:
    name: 📦 Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "npm"
      - run: npm ci

  lint:
    name: 🔬 Lint & Format
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "npm"
      - run: npm ci
      - name: 🔬 Lint & Format
        run: node --run lint:check

  audit:
    name: 🛡️ Audit
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "npm"
      - name: 🛡️ Audit
        run: npm audit --audit-level=high

  spell:
    name: 🈸 Spellcheck
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "npm"
      - run: npm ci
      - name: 🈸 Spellcheck
        run: node --run spell:check

  type:
    name: ʦ Typecheck
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "npm"
      - run: npm ci
      - name: ʦ Typecheck
        run: node --run type:check

  test:
    name: ⚡ Tests
    runs-on: ubuntu-latest
    needs: [dependencies]
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: pgination
          POSTGRES_PASSWORD: pgination
          POSTGRES_DB: test
          PGDATA: /dev/shm/pgdata
        options: >-
          --mount type=tmpfs,destination=/dev/shm
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "npm"
      - run: npm ci
      - name: ⚡ Tests
        run: node --run test:coverage
        env:
          DB_URL: postgresql://pgination:pgination@localhost:5432/test

  test-bun:
    name: 🥯 Bun Tests
    runs-on: ubuntu-latest
    needs: [dependencies]
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: pgination
          POSTGRES_PASSWORD: pgination
          POSTGRES_DB: test
          PGDATA: /dev/shm/pgdata
        options: >-
          --mount type=tmpfs,destination=/dev/shm
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: npm ci
      - name: ⚡ Tests
        run: bun test src/adapters/__tests__/bun.test.ts
        env:
          DB_URL: postgresql://pgination:pgination@localhost:5432/test

  build-and-release:
    name: 🚀 Build & release
    needs: [lint, audit, spell, type, test, test-bun]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "npm"
      - run: npm ci
      - name: 🔨 Build
        run: node --run build
      - name: 🚀 Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: node --run semantic-release
